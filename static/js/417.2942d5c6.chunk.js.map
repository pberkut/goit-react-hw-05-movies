{"version":3,"file":"static/js/417.2942d5c6.chunk.js","mappings":"iQAEaA,E,OAAYC,GAAAA,IAAH,yC,kBC8DtB,EAxDa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QA4BR,OA1BAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAEtBC,EAAiB,mCAAG,WAAML,GAAN,mGAEKM,EAAAA,EAAAA,IAAWN,EAASG,GAFzB,OAEhBI,EAFgB,OAGhBT,EAAQS,EAAaC,KACzB,kBAA4C,CAC1CC,GADF,EAAGA,GAEDC,KAFF,EAAOA,KAGLC,UAHF,EAAaA,UAIXC,aAJF,EAAwBA,aAAxB,IAOFb,EAASD,GAXa,gDAatBe,QAAQC,IAAR,MAbsB,yDAAH,sDAkBvB,OADAT,EAAkBL,GACX,WACLG,EAAgBY,OACjB,CACF,GAAE,CAACf,KAGF,kDAEE,wBACGF,EAAMU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACT,2BACE,kCAAUF,MAEV,SAACf,EAAD,CACEqB,IACEJ,EAAY,UA3CL,kCA4CiBA,GACpBK,EAENC,IAAKR,KAGP,uCAAeC,OAZRF,EADA,QAmBlB,C,+LC5DDU,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAc,CAClBC,QAASF,GAGLG,EAAgB,mCAAG,WAAMpB,GAAN,uFACAgB,EAAAA,EAAAA,IAAU,sBAAuB,CACtDK,OAAQH,EACRI,OAAQtB,EAAgBsB,SAHH,cACjBC,EADiB,yBAMhBA,EAASC,KAAKC,SANE,2CAAH,sDAShBC,EAAS,mCAAG,WAAOC,EAAO3B,GAAd,uFACOgB,EAAAA,EAAAA,IAAU,gBAAiB,CAChDK,OAAQ,CACNF,QAASF,EACTU,MAAAA,GAEFL,OAAQtB,EAAgBsB,SANV,cACVC,EADU,yBASTA,EAASC,KAAKC,SATL,2CAAH,wDAYTG,EAAU,mCAAG,WAAO/B,EAASG,GAAhB,uFACMgB,EAAAA,EAAAA,IAAA,iBAAoBnB,GAAW,CACpDwB,OAAQH,EACRI,OAAQtB,EAAgBsB,SAHT,cACXC,EADW,yBAMVA,EAASC,MANC,2CAAH,wDASVrB,EAAU,mCAAG,WAAON,EAASG,GAAhB,uFACMgB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,YAAuC,CAC5DwB,OAAQH,EACRI,OAAQtB,EAAgBsB,SAHT,cACXC,EADW,yBAMVA,EAASC,KAAKK,MANJ,2CAAH,wDASVC,EAAU,mCAAG,WAAOjC,EAASG,GAAhB,uFACMgB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,YAAuC,CAC5DwB,OAAQH,EACRI,OAAQtB,EAAgBsB,SAHT,cACXC,EADW,yBAMVA,EAASC,KAAKC,SANJ,2CAAH,uD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/themoviedb-API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ImageCast = styled.img`\n  width: 100px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/themoviedb-API';\nimport { ImageCast } from './Cast.styled.js';\nimport placeholderImage from '../../images/placeholder-cast.webp';\n\nconst BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchCreditsMovie = async movieId => {\n      try {\n        const creditsMovie = await getCredits(movieId, abortController);\n        const casts = creditsMovie.map(\n          ({ id, name, character, profile_path }) => ({\n            id,\n            name,\n            character,\n            profile_path,\n          })\n        );\n        setCasts(casts);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCreditsMovie(movieId);\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div>\n      MovieCredits - Cast\n      <ul>\n        {casts.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <p>Name: {name}</p>\n\n            <ImageCast\n              src={\n                profile_path\n                  ? `${BASE_URL_IMAGE + profile_path}`\n                  : placeholderImage\n              }\n              alt={name}\n            />\n\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3b120c16b34f353f70d8604b6ed477b2';\nconst axiosParams = {\n  api_key: API_KEY,\n};\n\nconst getTrendingToday = async abortController => {\n  const response = await axios.get('/trending/movie/day', {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nconst getSearch = async (query, abortController) => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nconst getDetails = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data;\n};\n\nconst getCredits = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.cast;\n};\n\nconst getReviews = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nexport { getTrendingToday, getSearch, getDetails, getCredits, getReviews };\n"],"names":["ImageCast","styled","useState","casts","setCasts","movieId","useParams","useEffect","abortController","AbortController","fetchCreditsMovie","getCredits","creditsMovie","map","id","name","character","profile_path","console","log","abort","src","placeholderImage","alt","axios","API_KEY","axiosParams","api_key","getTrendingToday","params","signal","response","data","results","getSearch","query","getDetails","cast","getReviews"],"sourceRoot":""}