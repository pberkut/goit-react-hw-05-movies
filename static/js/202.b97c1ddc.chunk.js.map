{"version":3,"file":"static/js/202.b97c1ddc.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/themoviedb-API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink as MovieOptionLink } from 'react-router-dom';\n\nexport const ImagePoster = styled.img`\n  width: 400px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const MoviesOptionList = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MoviesOptionItem = styled.li`\n  border: 1px solid gray;\n  /* padding: 10px; */\n`;\n\nexport const NavLink = styled(MovieOptionLink)`\n  display: inline-block;\n  font-size: 16px;\n  font-weight: 500;\n  text-decoration: none;\n  color: black;\n  /* background-color: black; */\n  padding: 10px;\n\n  &.active {\n    color: white;\n    background-color: tomato;\n  }\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getDetails } from 'services/themoviedb-API';\nimport {\n  ImagePoster,\n  MoviesOptionItem,\n  MoviesOptionList,\n  Wrapper,\n  NavLink,\n} from './MovieDetails.styled';\nimport placeholderImage from '../../images/placeholder-movie.webp';\n\nconst BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchDetailsMovie = async movieId => {\n      try {\n        const findMovie = await getDetails(movieId, abortController);\n        setMovie(findMovie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchDetailsMovie(movieId);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>⬅️ go back</Link>\n      <hr />\n      <Wrapper>\n        <div>\n          <ImagePoster\n            src={\n              poster_path ? `${BASE_URL_IMAGE + poster_path}` : placeholderImage\n            }\n            alt={title}\n          />\n        </div>\n        <div>\n          <p>\n            <span>{title}</span>\n            <span>({Number.parseInt(release_date)})</span>\n          </p>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <p>Overview: {overview}</p>\n          <p>\n            Genres:{' '}\n            {genres ? genres.map(({ name }) => name).join(', ') : 'No Genres'}.\n          </p>\n        </div>\n      </Wrapper>\n      <hr />\n      <h2>Additional information</h2>\n      <MoviesOptionList>\n        <MoviesOptionItem>\n          <NavLink to={`cast`}>Cast</NavLink>\n        </MoviesOptionItem>\n        <MoviesOptionItem>\n          <NavLink to={`reviews`}>Reviews</NavLink>\n        </MoviesOptionItem>\n      </MoviesOptionList>\n      <hr />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3b120c16b34f353f70d8604b6ed477b2';\nconst axiosParams = {\n  api_key: API_KEY,\n};\n\nconst getTrendingToday = async abortController => {\n  const response = await axios.get('/trending/movie/day', {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nconst getSearch = async (query, abortController) => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nconst getDetails = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data;\n};\n\nconst getCredits = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.cast;\n};\n\nconst getReviews = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nexport { getTrendingToday, getSearch, getDetails, getCredits, getReviews };\n"],"names":["ImagePoster","styled","Wrapper","MoviesOptionList","MoviesOptionItem","NavLink","MovieOptionLink","location","useLocation","movieId","useParams","useState","movie","setMovie","backLinkLocationRef","useRef","state","from","useEffect","abortController","AbortController","fetchDetailsMovie","getDetails","findMovie","console","log","abort","poster_path","title","release_date","vote_average","overview","genres","to","current","src","placeholderImage","alt","Number","parseInt","Math","round","map","name","join","Suspense","fallback","axios","API_KEY","axiosParams","api_key","getTrendingToday","params","signal","response","data","results","getSearch","query","getCredits","cast","getReviews"],"sourceRoot":""}