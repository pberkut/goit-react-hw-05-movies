{"version":3,"file":"static/js/859.2f9161a8.chunk.js","mappings":"8NAGMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qEAKJE,EAAmBF,EAAAA,GAAAA,GAAH,wGAOhBG,EAAkBH,EAAAA,GAAAA,GAAH,8QAgBfI,EAAaJ,EAAAA,GAAAA,IAAH,4DAKVK,EAAaL,EAAAA,GAAAA,EAAH,oJASVM,EAAaN,EAAAA,GAAAA,EAAH,0F,mBCGhB,EAlCmB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,SAACX,EAAD,WACE,UAACJ,EAAD,CAAMgB,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACJ,EAAD,CACEc,IACEL,EAAW,UAZJ,mCAYI,OACaA,GACpBM,EAENC,IAAKR,KAEP,SAACP,EAAD,CAAYgB,UAAU,QAAtB,SAA+BT,KAC/B,SAACN,EAAD,UAAagB,OAAOC,SAAST,SAXXH,EADZ,KAkBjB,C,gKCDD,EA/Ba,WACX,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAEtBC,EAAkB,mCAAG,gHAEMC,EAAAA,EAAAA,IAAiBH,GAFvB,OAEjBI,EAFiB,OAGjBxB,GAASyB,EAAAA,EAAAA,GAAeD,GAC9BN,EAAUlB,GAJa,gDAMvB0B,QAAQC,IAAR,MANuB,yDAAH,qDAYxB,OAFAL,IAEO,WACLF,EAAgBQ,OACjB,CACF,GAAE,KAGD,iCACE,mDACA,SAACC,EAAA,EAAD,CAAY7B,OAAQA,MAGzB,C,mMChCD8B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAc,CAClBC,QAASF,GAGLR,EAAgB,mCAAG,WAAMH,GAAN,uFACAU,EAAAA,EAAAA,IAAU,sBAAuB,CACtDI,OAAQF,EACRG,OAAQf,EAAgBe,SAHH,cACjBC,EADiB,yBAMhBA,EAASC,KAAKC,SANE,2CAAH,sDAShBC,EAAS,mCAAG,WAAOC,EAAOpB,GAAd,uFACOU,EAAAA,EAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACND,QAASF,EACTS,MAAAA,GAEFL,OAAQf,EAAgBe,SANV,cACVC,EADU,yBASTA,EAASC,KAAKC,SATL,2CAAH,wDAYTG,EAAU,mCAAG,WAAOC,EAAStB,GAAhB,uFACMU,EAAAA,EAAAA,IAAA,iBAAoBY,GAAW,CACpDR,OAAQF,EACRG,OAAQf,EAAgBe,SAHT,cACXC,EADW,yBAMVA,EAASC,MANC,2CAAH,wDASVM,EAAU,mCAAG,WAAOD,EAAStB,GAAhB,uFACMU,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAC5DR,OAAQF,EACRG,OAAQf,EAAgBe,SAHT,cACXC,EADW,yBAMVA,EAASC,KAAKO,MANJ,2CAAH,wDASVC,EAAU,mCAAG,WAAOH,EAAStB,GAAhB,uFACMU,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuC,CAC5DR,OAAQF,EACRG,OAAQf,EAAgBe,SAHT,cACXC,EADW,yBAMVA,EAASC,KAAKC,SANJ,2CAAH,uD,qBCvChB,IARuB,SAAAF,GAAQ,OAC7BA,EAASjC,KAAI,kBAA+C,CAC1DC,GADW,EAAGA,GAEdC,MAFW,EAAOA,MAGlBC,YAHW,EAAcA,YAIzBC,aAJW,EAA2BA,aAA3B,GADgB,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/themoviedb-API.js","utils/handleResponse.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link as LinkStyled } from 'react-router-dom';\n\nconst Link = styled(LinkStyled)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst MoviesListStyled = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst MovieItemStyled = styled.li`\n  list-style: none;\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 20px;\n  position: relative;\n  overflow: hidden;\n\n  transition: transform 100ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nconst ImageMovie = styled.img`\n  display: block;\n  width: 250px;\n`;\n\nconst TitleMovie = styled.p`\n  width: 250px;\n  text-align: center;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst MovieYears = styled.p`\n  text-align: center;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport {\n  ImageMovie,\n  MoviesListStyled,\n  TitleMovie,\n  MovieItemStyled,\n  Link,\n  MovieYears,\n};\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  ImageMovie,\n  MovieItemStyled,\n  MoviesListStyled,\n  TitleMovie,\n  Link,\n  MovieYears,\n} from './MoviesList.styled';\nimport placeholderPoster from '../../images/placeholder-movie.webp';\n\nconst BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListStyled>\n      {movies.map(({ id, title, poster_path, release_date }) => (\n        <MovieItemStyled key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <ImageMovie\n              src={\n                poster_path\n                  ? `${BASE_URL_IMAGE}${poster_path}`\n                  : placeholderPoster\n              }\n              alt={title}\n            />\n            <TitleMovie className=\"title\">{title}</TitleMovie>\n            <MovieYears>{Number.parseInt(release_date)}</MovieYears>\n          </Link>\n        </MovieItemStyled>\n      ))}\n    </MoviesListStyled>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getTrendingToday } from '../../services/themoviedb-API';\nimport MoviesList from '../../components/MoviesList';\nimport handleResponse from 'utils/handleResponse';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchTrendingToday = async () => {\n      try {\n        const trendingMovies = await getTrendingToday(abortController);\n        const movies = handleResponse(trendingMovies);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchTrendingToday();\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <h1>Trending movies today</h1>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3b120c16b34f353f70d8604b6ed477b2';\nconst axiosParams = {\n  api_key: API_KEY,\n};\n\nconst getTrendingToday = async abortController => {\n  const response = await axios.get('/trending/movie/day', {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nconst getSearch = async (query, abortController) => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nconst getDetails = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data;\n};\n\nconst getCredits = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.cast;\n};\n\nconst getReviews = async (movieId, abortController) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: axiosParams,\n    signal: abortController.signal,\n  });\n\n  return response.data.results;\n};\n\nexport { getTrendingToday, getSearch, getDetails, getCredits, getReviews };\n","const handleResponse = response =>\n  response.map(({ id, title, poster_path, release_date }) => ({\n    id,\n    title,\n    poster_path,\n    release_date,\n  }));\n\nexport default handleResponse;\n"],"names":["Link","styled","LinkStyled","MoviesListStyled","MovieItemStyled","ImageMovie","TitleMovie","MovieYears","movies","location","useLocation","map","id","title","poster_path","release_date","to","state","from","src","placeholderPoster","alt","className","Number","parseInt","useState","setMovies","useEffect","abortController","AbortController","fetchTrendingToday","getTrendingToday","trendingMovies","handleResponse","console","log","abort","MoviesList","axios","API_KEY","axiosParams","api_key","params","signal","response","data","results","getSearch","query","getDetails","movieId","getCredits","cast","getReviews"],"sourceRoot":""}